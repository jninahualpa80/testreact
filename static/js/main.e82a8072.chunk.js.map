{"version":3,"sources":["images/platziconf-logo.svg","images/badge-header.svg","images/logo.svg","images/astronauts.svg","components/Navbar.js","components/Layout.js","pages/Home.js","components/Gravatar.js","components/BadgesList.js","components/Loader.js","components/PageLoading.js","components/PageError.js","components/MiniLoader.js","pages/Badges.js","components/Badge.js","components/BadgeForm.js","pages/BadgeNew.js","pages/BadgeEdit.js","components/Modal.js","components/DeleteBadgeModal.js","pages/BadgeDetails.js","pages/BadgeDetailsContainer.js","pages/NotFound.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","src","logo","alt","React","Component","Layout","props","Fragment","children","Home","platziconfLogoImage","astronautsImage","Gravatar","email","hash","md5","BadgesListItem","badge","image","name","gender","species","created","BadgesList","badges","useState","query","setQuery","filteredBadges","SetfilteredBadges","useMemo","result","filter","toLowerCase","includes","useSearchBadges","length","type","value","onChange","e","target","map","key","id","Loader","PageLoading","PageError","error","message","MiniLoader","Badges","state","loading","data","results","fetchData","a","setState","fetch","response","json","console","log","this","clearInterval","intervalId","confLogo","Badge","firstName","lastName","jobTitle","twitter","BadgeForm","handleClick","onSubmit","formValues","onClick","BadgeNew","form","handleChange","header","avatarUrl","handleSubmit","BadgeEdit","Modal","modalIsOpen","ReactDom","createPortal","onClose","document","getElementById","DeleteBadgeModal","onDeleteBadge","BadgeDetails","conflogo","onOpenModal","onCloseModal","BadgeDetailsContainer","undefined","handleOpenModal","handleCloseModal","handleDeleteBadge","NotFound","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e82a8072.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/platziconf-logo.f246f5f1.svg\";","module.exports = __webpack_public_path__ + \"static/media/badge-header.973f5842.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.0026b862.svg\";","module.exports = __webpack_public_path__ + \"static/media/astronauts.71addf45.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './styles/Navbar.css';\nimport logo from '../images/logo.svg';\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <div className=\"Navbar\">\n        <div className=\"container-fluid\">\n          <Link className=\"Navbar__brand\" to=\"/\">\n            <img className=\"Navbar__brand-logo\" src={logo} alt=\"Logo\" />\n            <span className=\"font-weight-light\">Platzi</span>\n            <span className=\"font-weight-bold\">Conf</span>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\n\nimport Navbar from './Navbar';\n\nfunction Layout(props) {\n  // const children = props.children;\n\n  return (\n    <React.Fragment>\n      <Navbar />\n      {props.children}\n    </React.Fragment>\n  );\n}\n\nexport default Layout;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './styles/Home.css';\nimport platziconfLogoImage from '../images/platziconf-logo.svg';\nimport astronautsImage from '../images/astronauts.svg';\n\nexport default class Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"Home__col col-12 col-md-4\">\n              <img\n                src={platziconfLogoImage}\n                alt=\"Platzi Conf Logo\"\n                className=\"img-fluid mb-2\"\n              />\n\n              <h1>Badge Management System</h1>\n              <Link className=\"btn btn-primary\" to=\"/badges\">\n                Start\n              </Link>\n            </div>\n\n            <div className=\"Home__col d-none d-md-block col-md-8\">\n              <img\n                src={astronautsImage}\n                alt=\"Astronauts\"\n                className=\"img-fluid p-4\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport md5 from 'md5';\n\n// Aprende más del Gravatar en: http://gravatar.com\nfunction Gravatar(props) {\n  const email = props.email;\n  const hash = md5(email);\n\n  return (\n    <img\n      className={props.className}\n      src={`https://www.gravatar.com/avatar/${hash}?d=identicon`}\n      alt=\"Avatar\"\n    />\n  );\n}\n\nexport default Gravatar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles/BadgesList.css\";\nimport Gravatar from \"./Gravatar\";\n\nfunction BadgesListItem(props) {\n  return (\n    <div className=\"BadgesListItem\">\n      {/* <Gravatar className=\"BadgesListItem__avatar\" email={props.badge.email} /> */}\n      <img src={props.badge.image} className=\"list__image--width\" />\n      <div>\n        <strong>\n          {props.badge.name} {props.badge.gender}\n        </strong>\n        <br />@{props.badge.species}\n        <br />\n        {props.badge.created}\n      </div>\n    </div>\n  );\n}\n\nfunction useSearchBadges(badges) {\n  const [query, setQuery] = React.useState(\"\");\n  const [filteredBadges, SetfilteredBadges] = React.useState(badges);\n  React.useMemo(() => {\n    const result = badges.filter((badge) => {\n      return `${badge.name}`.toLowerCase().includes(query.toLowerCase());\n    });\n    SetfilteredBadges(result);\n  }, [badges, query]);\n  return { query, setQuery, filteredBadges };\n}\n\nfunction BadgesList(props) {\n  const badges = props.badges;\n  //console.log(badges);\n\n  const { query, setQuery, filteredBadges } = useSearchBadges(badges);\n\n  if (filteredBadges.length === 0) {\n    return (\n      <div>\n        <div className=\"form-group mr-4\">\n          <label>Filter Badges</label>\n          <input\n            type=\"text\"\n            className=\"form-control mb-2\"\n            value={query}\n            onChange={(e) => {\n              setQuery(e.target.value);\n            }}\n          />\n        </div>\n        <h3>No badges were found</h3>\n\n        <Link className=\"btn btn-primary\" to=\"/badges/new\">\n          Create new badge\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"BadgesList\">\n      <div className=\"form-group mr-4\">\n        <label>Filter Badges</label>\n        <input\n          type=\"text\"\n          className=\"form-control mb-2\"\n          value={query}\n          onChange={(e) => {\n            setQuery(e.target.value);\n          }}\n        />\n      </div>\n\n      <div className=\"container\">\n        <ul className=\"row list-unstyled\">\n          {filteredBadges.map((badge) => {\n            return (\n              <li key={badge.id} className=\"col-12 col-md-3 \">\n                <BadgesListItem badge={badge} />\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default BadgesList;\n","import React, { Component } from 'react';\n\nimport './styles/Loader.css';\n\nexport default class Loader extends Component {\n  render() {\n    return (\n      <div className=\"lds-grid\">\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n        <div />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport './styles/PageLoading.css';\nimport Loader from './Loader';\n\nfunction PageLoading() {\n  return (\n    <div className=\"PageLoading\">\n      <Loader />\n    </div>\n  );\n}\n\nexport default PageLoading;\n","import React from 'react';\n\nimport './styles/PageError.css';\n\nfunction PageError(props) {\n  return <div className=\"PageError\">{props.error.message}</div>;\n}\n\nexport default PageError;\n","import React, { Component } from 'react';\n\nimport './styles/Loader.css';\n\nexport default class MiniLoader extends Component {\n  render() {\n    return (\n      <div className=\"lds-grid\">\n        <div />\n        <div />\n        <div />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./styles/Badges.css\";\nimport confLogo from \"../images/badge-header.svg\";\nimport BadgesList from \"../components/BadgesList\";\nimport PageLoading from \"../components/PageLoading\";\nimport PageError from \"../components/PageError\";\nimport MiniLoader from \"../components/MiniLoader\";\n//import api from '../api';\n\nclass Badges extends React.Component {\n  state = {\n    loading: true,\n    error: null,\n    data: {\n      results: [],\n    },\n  };\n\n  componentDidMount() {\n    this.fetchData();\n\n    // this.intervalId = setInterval(this.fetchData, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalId);\n  }\n\n  fetchData = async () => {\n    this.setState({ loading: true, error: null });\n\n    try {\n      //const data = await api.badges.list();\n      const response = await fetch(\"https://rickandmortyapi.com/api/character\");\n      const data = await response.json();\n      console.log(data);\n\n      this.setState({ loading: false, data: data });\n    } catch (error) {\n      this.setState({ loading: false, error: error });\n    }\n  };\n\n  render() {\n    if (this.state.loading === true && !this.state.data) {\n      return <PageLoading />;\n    }\n\n    if (this.state.error) {\n      return <PageError error={this.state.error} />;\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"Badges\">\n          <div className=\"Badges__hero\">\n            <div className=\"Badges__container\">\n              <img\n                className=\"Badges_conf-logo\"\n                src={confLogo}\n                alt=\"Conf Logo\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"container\">\n          <div className=\"Badges__buttons\">\n            <Link to=\"/badges/new\" className=\"btn btn-primary\">\n              New Badge\n            </Link>\n          </div>\n\n          <BadgesList badges={this.state.data.results} />\n\n          {this.state.loading && <MiniLoader />}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Badges;\n","import React from 'react';\n\nimport './styles/Badge.css';\nimport confLogo from '../images/badge-header.svg';\nimport Gravatar from './Gravatar';\n\nclass Badge extends React.Component {\n  render() {\n    return (\n      <div className=\"Badge\">\n        <div className=\"Badge__header\">\n          <img src={confLogo} alt=\"Logo de la conferencia\" />\n        </div>\n\n        <div className=\"Badge__section-name\">\n          <Gravatar className=\"Badge__avatar\" email={this.props.email} />\n          <h1>\n            {this.props.firstName} <br /> {this.props.lastName}\n          </h1>\n        </div>\n\n        <div className=\"Badge__section-info\">\n          <h3>{this.props.jobTitle}</h3>\n          <div>@{this.props.twitter}</div>\n        </div>\n\n        <div className=\"Badge__footer\">#platziconf</div>\n      </div>\n    );\n  }\n}\n\nexport default Badge;\n","import React from 'react';\n\nclass BadgeForm extends React.Component {\n  handleClick = e => {\n    console.log('Button was clicked');\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.props.onSubmit}>\n          <div className=\"form-group\">\n            <label>First Name</label>\n            <input\n              onChange={this.props.onChange}\n              className=\"form-control\"\n              type=\"text\"\n              name=\"firstName\"\n              value={this.props.formValues.firstName}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Last Name</label>\n            <input\n              onChange={this.props.onChange}\n              className=\"form-control\"\n              type=\"text\"\n              name=\"lastName\"\n              value={this.props.formValues.lastName}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Email</label>\n            <input\n              onChange={this.props.onChange}\n              className=\"form-control\"\n              type=\"email\"\n              name=\"email\"\n              value={this.props.formValues.email}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Job Title</label>\n            <input\n              onChange={this.props.onChange}\n              className=\"form-control\"\n              type=\"text\"\n              name=\"jobTitle\"\n              value={this.props.formValues.jobTitle}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label>Twitter</label>\n            <input\n              onChange={this.props.onChange}\n              className=\"form-control\"\n              type=\"text\"\n              name=\"twitter\"\n              value={this.props.formValues.twitter}\n            />\n          </div>\n\n          <button onClick={this.handleClick} className=\"btn btn-primary\">\n            Save\n          </button>\n\n          {this.props.error && (\n            <p className=\"text-danger\">{this.props.error.message}</p>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default BadgeForm;\n","import React from \"react\";\n\nimport \"./styles/BadgeNew.css\";\nimport header from \"../images/platziconf-logo.svg\";\nimport Badge from \"../components/Badge\";\nimport BadgeForm from \"../components/BadgeForm\";\nimport PageLoading from \"../components/PageLoading\";\n//import api from '../api';\n\nclass BadgeNew extends React.Component {\n  state = {\n    loading: false,\n    error: null,\n    form: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      jobTitle: \"\",\n      twitter: \"\",\n    },\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  // handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   this.setState({ loading: true, error: null });\n\n  //   try {\n  //     await api.badges.create(this.state.form);\n  //     this.setState({ loading: false });\n\n  //     this.props.history.push(\"/badges\");\n  //   } catch (error) {\n  //     this.setState({ loading: false, error: error });\n  //   }\n  // };\n\n  render() {\n    if (this.state.loading) {\n      return <PageLoading />;\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"BadgeNew__hero\">\n          <img\n            className=\"BadgeNew__hero-image img-fluid\"\n            src={header}\n            alt=\"Logo\"\n          />\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <Badge\n                firstName={this.state.form.firstName || \"FIRST_NAME\"}\n                lastName={this.state.form.lastName || \"LAST_NAME\"}\n                twitter={this.state.form.twitter || \"twitter\"}\n                jobTitle={this.state.form.jobTitle || \"JOB_TITLE\"}\n                email={this.state.form.email || \"EMAIL\"}\n                avatarUrl=\"https://www.gravatar.com/avatar/21594ed15d68ace3965642162f8d2e84?d=identicon\"\n              />\n            </div>\n\n            <div className=\"col-6\">\n              <h1>New Attendant</h1>\n              <BadgeForm\n                onChange={this.handleChange}\n                onSubmit={this.handleSubmit}\n                formValues={this.state.form}\n                error={this.state.error}\n              />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BadgeNew;\n","import React from \"react\";\n\nimport \"./styles/BadgeEdit.css\";\nimport header from \"../images/platziconf-logo.svg\";\nimport Badge from \"../components/Badge\";\nimport BadgeForm from \"../components/BadgeForm\";\nimport PageLoading from \"../components/PageLoading\";\n//import api from \"../api\";\n\nclass BadgeEdit extends React.Component {\n  state = {\n    loading: true,\n    error: null,\n    form: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      jobTitle: \"\",\n      twitter: \"\",\n    },\n  };\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      form: {\n        ...this.state.form,\n        [e.target.name]: e.target.value,\n      },\n    });\n  };\n\n  // handleSubmit = async (e) => {\n  //   e.preventDefault();\n  //   this.setState({ loading: true, error: null });\n\n  //   try {\n  //     await api.badges.update(this.props.match.params.badgeId, this.state.form);\n  //     this.setState({ loading: false });\n\n  //     this.props.history.push(\"/badges\");\n  //   } catch (error) {\n  //     this.setState({ loading: false, error: error });\n  //   }\n  // };\n\n  render() {\n    if (this.state.loading) {\n      return <PageLoading />;\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"BadgeEdit__hero\">\n          <img\n            className=\"BadgeEdit__hero-image img-fluid\"\n            src={header}\n            alt=\"Logo\"\n          />\n        </div>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-6\">\n              <Badge\n                firstName={this.state.form.firstName || \"FIRST_NAME\"}\n                lastName={this.state.form.lastName || \"LAST_NAME\"}\n                twitter={this.state.form.twitter || \"twitter\"}\n                jobTitle={this.state.form.jobTitle || \"JOB_TITLE\"}\n                email={this.state.form.email || \"EMAIL\"}\n                avatarUrl=\"https://www.gravatar.com/avatar/21594ed15d68ace3965642162f8d2e84?d=identicon\"\n              />\n            </div>\n\n            <div className=\"col-6\">\n              <h1>Edit Attendant</h1>\n              <BadgeForm\n                onChange={this.handleChange}\n                onSubmit={this.handleSubmit}\n                formValues={this.state.form}\n                error={this.state.error}\n              />\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default BadgeEdit;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport \"./styles/Modal.css\";\n\nfunction Modal(props) {\n  if (!props.modalIsOpen) {\n    return null;\n  }\n  return ReactDom.createPortal(\n    <div className=\"Modal\">\n      <div className=\"Modal__container\">\n        <button onClick={props.onClose} className=\"Modal__close-button\">\n          X\n        </button>\n        {props.children}\n      </div>\n    </div>,\n    document.getElementById(\"modal\")\n  );\n}\n\nexport default Modal;\n","import React from \"react\";\nimport Modal from \"./Modal\";\nimport \"./styles/DeleteBadgeModal.css\";\n\nfunction DeleteBadgeModal(props) {\n  return (\n    <Modal modalIsOpen={props.modalIsOpen} onClose={props.onClose}>\n      <div className=\"DeleteBadgeModal\">\n        <h1>Are you Sure?</h1>\n        <p> You are about to delete this badge.</p>\n      </div>\n      <div>\n        <button className=\"btn btn-danger mr-4\" onClick={props.onDeleteBadge}>\n          Delete\n        </button>\n        <button onClick={props.onClose} className=\"btn btn-primary\">\n          Cancel\n        </button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default DeleteBadgeModal;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./styles/BadgeDetails.css\";\nimport conflogo from \"../images/platziconf-logo.svg\";\nimport Badge from \"../components/Badge\";\nimport DeleteBadgeModal from \"../components/DeleteBadgeModal\";\n\nfunction BadgeDetails(props) {\n  const badge = props.badge;\n  return (\n    <React.Fragment>\n      <div>\n        <div className=\"BadgeDetails__hero\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 col-md-6\">\n                <img src={conflogo} alt=\"logo de la conferencia\" />\n              </div>\n              <div className=\"col-12 col-md-6 BadgeDetails__hero-attendant-name\">\n                <h1>\n                  {badge.firstName} {badge.lastName}\n                </h1>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col\">\n              <Badge\n                firstName={badge.firstName}\n                lastName={badge.lastName}\n                jobTitle={badge.jobTitle}\n                twitter={badge.twitter}\n                email={badge.email}\n              />\n            </div>\n            <div className=\"col\">\n              <h2>Actions </h2>\n              <div>\n                <div>\n                  <Link\n                    className=\"btn btn-primary mb-4\"\n                    to={`/badges/${badge.id}/edit`}\n                  >\n                    Edit\n                  </Link>\n                </div>\n\n                <div>\n                  <button\n                    onClick={props.onOpenModal}\n                    className=\"btn btn-danger\"\n                  >\n                    Delete\n                  </button>\n                  <DeleteBadgeModal\n                    modalIsOpen={props.modalIsOpen}\n                    onClose={props.onCloseModal}\n                    onDeleteBadge={props.onDeleteBadge}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default BadgeDetails;\n","import React from \"react\";\nimport PageLoading from \"../components/PageLoading\";\nimport PageError from \"../components/PageError\";\n//import Api from \"../api\";\nimport BadgeDetails from \"./BadgeDetails\";\n//import api from \"../api\";\n\nclass BadgeDetailsContainer extends React.Component {\n  state = {\n    loading: true,\n    error: null,\n    data: undefined,\n    modalIsOpen: false,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  handleOpenModal = (e) => {\n    this.setState({ modalIsOpen: true });\n  };\n\n  handleCloseModal = (e) => {\n    this.setState({ modalIsOpen: false });\n  };\n\n  // handleDeleteBadge = async (e) => {\n  //   this.setState({ loading: true, error: null });\n  //   try {\n  //     await api.badges.remove(this.props.match.params.badgeId);\n  //     this.setState({ loading: false });\n  //     this.props.history.push(\"/badges\");\n  //   } catch (error) {\n  //     this.setState({ loading: false, error: error });\n  //   }\n  // };\n\n  // fetchData = async () => {\n  //   this.setState({ loading: true, error: null });\n\n  //   try {\n  //     const data = await Api.badges.read(this.props.match.params.badgeId);\n  //     this.setState({ loading: false, data: data });\n  //   } catch (error) {\n  //     this.setState({ loading: false, error: error });\n  //   }\n  // };\n\n  render() {\n    if (this.state.loading) {\n      return <PageLoading />;\n    }\n\n    if (this.state.error) {\n      return <PageError error={this.state.error} />;\n    }\n\n    const badge = this.state.data;\n\n    return (\n      <BadgeDetails\n        onCloseModal={this.handleCloseModal}\n        onOpenModal={this.handleOpenModal}\n        modalIsOpen={this.state.modalIsOpen}\n        badge={badge}\n        onDeleteBadge={this.handleDeleteBadge}\n      />\n    );\n  }\n}\n\nexport default BadgeDetailsContainer;\n","import React from 'react';\n\nfunction NotFound() {\n  return <h1>404: Not Found</h1>;\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\n\nimport Layout from \"./Layout\";\nimport Home from \"../pages/Home\";\nimport Badges from \"../pages/Badges\";\nimport BadgeNew from \"../pages/BadgeNew\";\nimport BadgeEdit from \"../pages/BadgeEdit\";\nimport BadgeDetailsContainer from \"../pages/BadgeDetailsContainer\";\nimport NotFound from \"../pages/NotFound\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/badges\" component={Badges} />\n          <Route exact path=\"/badges/new\" component={BadgeNew} />\n          <Route exact path=\"/badges/:badgeId/edit\" component={BadgeEdit} />\n          <Route\n            exact\n            path=\"/badges/:badgeId\"\n            component={BadgeDetailsContainer}\n          />\n          <Route component={NotFound} />\n        </Switch>\n      </Layout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport Badges from \"./pages/Badges\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}